// Generated by CoffeeScript 1.6.3
/*

  Express adapter for Router

  2013 (c) Andrey Popp <8mayday@gmail.com>
*/

var path = require('path'),
    express = require('express'),
    extend = require('underscore').extend,
    browserify = require('browserify'),
    defer = require('kew').defer,
    _nowWeCanRequireJSX = require('./require_jsx'),
    Router = require('./router'),
    getCaller = require('./utils').getCaller;

function _genServerRenderingCode(module, props) {
  return [
    "var React = require('react-tools/build/modules/React');",
    "var Component = require(" + JSON.stringify(module) + ");",
    "React.renderComponentToString(",
    "Component(" + (JSON.stringify(props)) + "),",
    "function(str) { result = str; });"
  ].join('\n');
};

function _genClientRoutingCode(handler, request, routes) {
  return [
    "<script>",
      "(function() {",
        "var handler = require(" + JSON.stringify(handler) + ");",
        "var request = " + JSON.stringify(request) + ";",
        "var routes = " + JSON.stringify(routes) + ";",
        "var bootstrap = require('./bootstrap');",
        "for (var key in routes) {",
        "  routes[key] = require(routes[key]);",
        "}",
        "bootstrap(handler, request, routes);",
      "})();",
    "</script>"
  ].join('\n');
};

function renderComponent(bundle, module, props) {
  var context = {result: null};
  var contextify = require('contextify');
  contextify(context);
  context.run(bundle);
  context.run(_genServerRenderingCode(module, props));
  context.dispose();
  return context.result;
};

function _insertScriptTag(markup, tag) {
  var index = markup.indexOf('</html>');
  if (index > -1) {
    return markup.slice(0, index) + tag + markup.slice(index);
  } else {
    return markup + scripts;
  }
};

function sendPage(routes, getBundle) {
  return function(req, res, next) {
    var router = new Router(routes),
        match = router.match(req.path);

    if (match == null) {
      return next();
    }

    var request = {
      path: req.path,
      query: req.query,
      params: match.params
    };

    getBundle()
      .then(function(result) {
        var rendered = renderComponent(result, match.handler, request);
        rendered = _insertScriptTag(rendered,
          '<script src="/__script__"></script>' +
          _genClientRoutingCode(match.handler, request, routes));
        return res.send(rendered);
      }).fail(next);
  };
};

function computeBundle(routes, root) {
  var promise = defer(),
      b = browserify()
          .transform('reactify')
          .require('react-tools/build/modules/React')
          .require('./bootstrap');

  for (var k in routes) {
    b.require(
      (routes[k][0] === '.' ? path.resolve(root, routes[k]) : routes[k]),
      {expose: routes[k]});
  }

  b.bundle({debug: true}, promise.makeNodeResolver());
  return promise;
}

function sendScript(getBundle) {
  return function(req, res, next) {
    res.setHeader('Content-Type', 'application/json');
    getBundle()
      .then(function(result) { res.send(result) })
      .fail(next);
  };
};

module.exports = function(routes) {
  var root = path.dirname(getCaller()),
      app = express(),
      bundle = null,
      generateBundle = function() { bundle = computeBundle(routes, root); },
      getBundle = function() { return bundle; };

  generateBundle();

  app.get('/__script__', sendScript(getBundle));
  app.use(sendPage(routes, getBundle));

  return app;
};
